{"version":3,"sources":["Store.tsx","MovieSelectionApp/Theme.ts","App.tsx","MovieSelectionApp/Actions.tsx","MovieSelectionApp/HomePage.tsx","MovieSelectionApp/FavPage.tsx","index.tsx"],"names":["initialState","episodes","favourites","Store","React","createContext","reducer","state","action","type","payload","preset","colors","text","background","primary","secondary","muted","gray","highlight","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","space","sizes","avatar","radii","default","circle","shadows","card","fontFamily","lineHeight","fontWeight","display","fontSize","caps","textTransform","letterSpacing","variants","width","height","borderRadius","p","bg","boxShadow","link","color","nav","textDecoration","buttons","outline","variant","styles","root","StyledLink","styled","Link","App","children","useContext","theme","sx","alignItems","gridTemplateColumns","gridAutoRows","gridGap","gridColumn","to","style","gridRow","length","fetchDataAction","dispatch","a","async","fetch","data","json","dataJson","_embedded","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","fav","id","EpisodeList","lazy","RouterPage","props","pageComponent","ReactDOM","render","useReducer","Provider","value","useEffect","store","Suspense","fallback","className","path","document","getElementById"],"mappings":"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","file":"static/js/main.a22fa5a6.chunk.js","sourcesContent":["import React from 'react'\nimport { IState, IAction } from './MovieSelectionApp/interfaces'\n\nconst initialState: IState = {\n  episodes: [],\n  favourites: []\n}\n\nexport const Store = React.createContext<IState | any>(initialState)\n\nfunction reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return { ...state, episodes: action.payload }\n    case 'ADD_FAV':\n      return { ...state, favourites: [...state.favourites, action.payload] }\n    case 'REMOVE_FAV':\n      return { ...state, favourites: action.payload }\n    default:\n      return state\n  }\n}\n\nexport function StoreProvider({ children }: JSX.ElementChildrenAttribute): JSX.Element {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  return <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\n}","// default theme preset\n\nexport const preset = {\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f9',\n    gray: '#dddddf',\n    highlight: 'hsla(205, 100%, 40%, 0.125)',\n  },\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64, 96\n  ],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25,\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  sizes: {\n    avatar: 48,\n  },\n  radii: {\n    default: 4,\n    circle: 99999,\n  },\n  shadows: {\n    card: '0 0 4px rgba(0, 0, 0, .125)',\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n    },\n    display: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n      fontSize: [ 5, 6, 7 ],\n    },\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: '0.1em',\n    },\n  },\n  variants: {\n    avatar: {\n      width: 'avatar',\n      height: 'avatar',\n      borderRadius: 'circle',\n    },\n    card: {\n      p: 2,\n      bg: 'background',\n      boxShadow: 'card',\n    },\n    link: {\n      color: 'primary',\n    },\n    nav: {\n      fontSize: 1,\n      fontWeight: 'bold',\n      display: 'inline-block',\n      p: 2,\n      color: 'inherit',\n      textDecoration: 'none',\n      ':hover,:focus,.active': {\n        color: 'primary',\n      }\n    },\n  },\n  buttons: {\n    primary: {\n      fontSize: 2,\n      fontWeight: 'bold',\n      color: 'background',\n      bg: 'primary',\n      borderRadius: 'default',\n    },\n    outline: {\n      variant: 'buttons.primary',\n      color: 'primary',\n      bg: 'transparent',\n      boxShadow: 'inset 0 0 2px',\n    },\n    secondary: {\n      variant: 'buttons.primary',\n      color: 'background',\n      bg: 'secondary',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body',\n    },\n  },\n}\n\nexport default preset","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport { Store } from \"./Store\";\nimport { Link } from \"@reach/router\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { Box, Heading } from \"rebass\";\nimport preset from \"./MovieSelectionApp/Theme\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nconst dynamicStyle = (props: any) =>\n  css`\n    color: ${props.color};\n  `;\n\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  display: block;\n  margin: 0.5em 0;\n  font-family: Helvetica, Arial, sans-serif;\n\n  &:hover {\n    text-decoration: underline;\n  }\n  &.active {\n    color: red;\n  }\n`;\nexport default function App({\n  children\n}: {\n  children: JSX.Element;\n}): JSX.Element {\n  const { state } = React.useContext(Store);\n  return (\n    <ThemeProvider theme={preset}>\n      <Box\n        sx={{\n          display: \"grid\",\n          color: \"white\",\n          bg: \"black\",\n          alignItems: \"center\",\n          gridTemplateColumns: \"repeat(3, 1fr);\",\n          gridAutoRows: \"minmax(100px, auto);\",\n          gridGap: 3 // theme.space[3]\n        }}\n      >\n        <Heading p={2} sx={{ gridColumn: \" 2 / 3\",}} fontWeight=\"bold\">\n          Hello from different dimension ;)\n        </Heading>\n        <Box\n          sx={{\n            display: \"grid\",\n            alignItems: \"stretch;\",\n            gridColumn: \" 3 / 3\",\n            gridTemplateColumns: \"repeat(3, 1fr);\",\n            gridGap: 10,\n            gridAutoRows: \"minmax(10px, auto)\"\n          }}\n        >\n          <StyledLink\n            to=\"/\"\n            style={{\n              gridColumn: \" 2 / 3\",\n              gridRow: \" 1\"\n            }}\n          >\n            {\" \"}\n            Home\n          </StyledLink>\n          <StyledLink\n            to=\"/favourites\"\n            style={{\n              gridColumn: \" 3 / 3\",\n              gridRow: \" 1\"\n            }}\n          >\n            Favourite(s): {state.favourites.length}\n          </StyledLink>\n        </Box>\n      </Box>\n      <Fragment>{children}</Fragment>\n    </ThemeProvider>\n  );\n}\n","import { IAction, IEpisode, IState ,Dispatch } from \"./interfaces\";\n\nexport const fetchDataAction = async (dispatch: Dispatch) => {\n  const URL = 'https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes';\n  const data = await fetch(URL);\n  const dataJson = await data.json();\n\n  return dispatch({\n    type: \"FETCH_DATA\",\n    payload: dataJson._embedded.episodes\n  });\n};\n\nexport const toggleFavAction = (state: IState, dispatch: any, episode: IEpisode | any): IAction => {\n  const episodeInFav = state.favourites.includes(episode);\n  debugger\n  let dispatchObj = {\n    type: \"ADD_FAV\",\n    payload: episode\n  };\n\n  if (episodeInFav) {\n    const favWithoutEpisode = state.favourites.filter(\n      (fav: IEpisode) => fav.id !== episode.id\n    );\n    dispatchObj = {\n      type: \"REMOVE_FAV\",\n      payload: favWithoutEpisode\n    };\n  }\n  return dispatch(dispatchObj);\n};\n","import React from 'react'\n\nimport App from '../App'\nimport { Store } from '../Store'\nimport { IEpisodeProps } from './interfaces'\nimport { fetchDataAction, toggleFavAction } from './Actions'\n\nconst EpisodeList = React.lazy<any>(() => import('./EpisodesList'))\n\nexport default function HomePage() {\n  const { state, dispatch } = React.useContext(Store)\n\n  React.useEffect(() => {\n    state.episodes.length === 0 && fetchDataAction(dispatch)\n  })\n\n  const props: IEpisodeProps = {\n    episodes: state.episodes,\n    store: { state, dispatch },\n    toggleFavAction,\n    favourites: state.favourites\n  }\n\n  return (\n    <App>\n      <React.Suspense fallback={<div>loading...</div>}>\n        <div className='episode-layout'>\n          <EpisodeList {...props} />\n        </div>\n      </React.Suspense>\n    </App>\n  )\n}","import React from 'react'\n\nimport App from '../App'\nimport { Store } from '../Store'\nimport { IEpisodeProps } from './interfaces'\nimport { toggleFavAction } from './Actions'\n\nconst EpisodeList = React.lazy<any>(() => import('./EpisodesList'))\n\nexport default function FavPage(): JSX.Element {\n  const { state, dispatch } = React.useContext(Store)\n\n  const props: IEpisodeProps = {\n    episodes: state.favourites,\n    store: { state, dispatch },\n    toggleFavAction,\n    favourites: state.favourites\n  }\n\n  return (\n    <App>\n      <React.Suspense fallback={<div>loading...</div>}>\n        <div className='episode-layout'>\n          <EpisodeList {...props} />\n        </div>\n      </React.Suspense>\n    </App>\n  )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { StoreProvider } from \"./Store\";\nimport { Router, RouteComponentProps } from \"@reach/router\";\n\nimport HomePage from \"./MovieSelectionApp/HomePage\";\nimport FavPage from \"./MovieSelectionApp/FavPage\";\n\nconst RouterPage = (\n  props: { pageComponent: JSX.Element } & RouteComponentProps\n) => props.pageComponent;\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <RouterPage pageComponent={<HomePage />} path=\"/\" />\n      <RouterPage pageComponent={<FavPage />} path=\"/favourites\" />\n    </Router>\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}