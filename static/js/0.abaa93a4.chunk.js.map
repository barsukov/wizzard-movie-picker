{"version":3,"sources":["MovieSelectionApp/EpisodesList.tsx"],"names":["isFavorite","favourites","episode","find","fav","id","EpisodesList","props","episodes","toggleFavAction","store","state","dispatch","map","key","sx","px","py","backgroundImage","image","original","backgroundSize","borderRadius","color","bg","opacity","textAlign","fontSize","season","number","display","gridGap","fontWeight","name","variant","onClick"],"mappings":"mIAAA,2EAUMA,EAAa,SAACC,EAA6BC,GAC/C,OAAOD,EAAWE,MAAK,SAACC,GAAD,OAAmBA,EAAIC,KAAOH,EAAQG,OAEhD,SAASC,EAAaC,GAAoC,IAC/DC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,gBAAiBR,EAAsBM,EAAtBN,WAAYS,EAAUH,EAAVG,MACvCC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OAAOJ,EAASK,KAAI,SAACX,GACnB,OACE,kBAAC,IAAD,CAAMY,IAAKZ,EAAQG,IACjB,kBAAC,IAAD,CACEU,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,gBAAgB,OAAD,OACXhB,EAAQiB,MAAQjB,EAAQiB,MAAMC,SAAW,GAD9B,KAGfC,eAAgB,QAChBC,aAAc,EACdC,MAAO,QACPC,GAAI,SAGN,kBAAC,IAAD,CACET,GAAI,CACFC,GAAI,EACJC,GAAI,EACJI,eAAgB,QAChBC,aAAc,EACdC,MAAO,QACPC,GAAI,QACJC,QAAS,QAGX,kBAAC,IAAD,CAASC,UAAU,SAASH,MAAM,QAAQI,SAAU,CAAC,EAAG,IAAxD,YACYzB,EAAQ0B,OADpB,YACqC1B,EAAQ2B,UAIjD,kBAAC,IAAD,iBACMtB,EADN,CAEEQ,GAAI,CACFe,QAAS,OACTC,QAAS,KAGX,kBAAC,IAAD,CAAMJ,SAAU,CAAC,EAAG,EAAG,GAAIK,WAAW,OAAOT,MAAM,WAChDrB,EAAQ+B,MAEX,kBAAC,IAAD,CACEC,QAASlC,EAAWC,EAAYC,GAAW,UAAY,YACvDiC,QAAS,kBAAM1B,EAAgBE,EAAOC,EAAUV,KAE/CF,EAAWC,EAAYC,GAAW,QAAU","file":"static/js/0.abaa93a4.chunk.js","sourcesContent":["import React from \"react\";\nimport { IEpisode, Dispatch, IState, FavAction } from \"./interfaces\";\nimport { Button, Box, Heading, Card, Text } from \"rebass\";\ninterface IProps {\n  episodes: Array<IEpisode>;\n  toggleFavAction: FavAction;\n  favourites: Array<IEpisode>;\n  store: { state: IState; dispatch: Dispatch };\n}\n\nconst isFavorite = (favourites: Array<IEpisode>, episode: IEpisode) => {\n  return favourites.find((fav: IEpisode) => fav.id === episode.id);\n};\nexport default function EpisodesList(props: IProps): Array<JSX.Element> {\n  const { episodes, toggleFavAction, favourites, store } = props;\n  const { state, dispatch } = store;\n\n  return episodes.map((episode: IEpisode) => {\n    return (\n      <Card key={episode.id}>\n        <Box\n          sx={{\n            px: 4,\n            py: 6,\n            backgroundImage: `url(${\n              !!episode.image ? episode.image.original : \"\"\n            })`,\n            backgroundSize: \"cover\",\n            borderRadius: 8,\n            color: \"white\",\n            bg: \"gray\"\n          }}\n        >\n          <Box\n            sx={{\n              px: 1,\n              py: 3,\n              backgroundSize: \"cover\",\n              borderRadius: 8,\n              color: \"white\",\n              bg: \"white\",\n              opacity: \"60%\"\n            }}\n          >\n            <Heading textAlign=\"center\" color=\"black\" fontSize={[3, 5]}>\n              Seasion: {episode.season} Number: {episode.number}\n            </Heading>\n          </Box>\n        </Box>\n        <Box\n          {...props}\n          sx={{\n            display: \"grid\",\n            gridGap: 2 // theme.space[3]\n          }}\n        >\n          <Text fontSize={[3, 4, 5]} fontWeight=\"bold\" color=\"primary\">\n            {episode.name}\n          </Text>\n          <Button\n            variant={isFavorite(favourites, episode) ? \"outline\" : \"secondary\"}\n            onClick={() => toggleFavAction(state, dispatch, episode)}\n          >\n            {isFavorite(favourites, episode) ? \"Unfav\" : \"Fav\"}\n          </Button>\n        </Box>\n      </Card>\n    );\n  });\n}\n"],"sourceRoot":""}